from enum import StrEnum

from pydantic import BaseModel, Field

from ajb.base import BaseDataModel


class SkillLevel(StrEnum):
    """Enumeration representing the how proficient a candidate is on a particular skill"""

    LOW = "Low"
    MEDIUM = "Medium"
    HIGH = "High"


class Criteria(BaseModel):
    """A Single Criteria for evaluating a candidate's interview transcript"""

    skill_name: str = Field(
        ...,
        description="The classification name for this skill",
    )
    description: str = Field(
        ...,
        description="The criteria for this skill",
    )
    weight: int = Field(..., gt=0, lt=5, description="The importance of this criteria")
    skill_level: SkillLevel = Field(
        ..., description="The proficiency level of the candidate on this skill"
    )


class CreateJobInterviewRubric(BaseModel):
    """Main criteria for grading each skill"""

    technical_skills: list[Criteria] = Field(
        ..., default_factory=list, description="The technical skills to evaluate"
    )
    soft_skills: list[Criteria] = Field(
        ..., default_factory=list, description="The soft skills to evaluate"
    )
    experience_education: list[Criteria] = Field(
        ...,
        default_factory=list,
        description="The experience and education to evaluate",
    )


class JobInterviewRubric(CreateJobInterviewRubric, BaseDataModel):
    pass


"""

class Criteria(BaseModel):
    description: str  <- generated by generate rubric usecase
    weighting: int ( 1 - 5 )

    score: int ( 1 - 10 ) | None = NOne  <- filled in by scoring usecase
    rationale: str | None = None


class CreateJobInterviewRubric(BaseModel):

    technical_skills: List[Criteria] = Field(
        ..., default_factory=list, description="The technical skills to evaluate"
    )
    technical_skill_weighting: int 

    soft_skills: List[Criteria] = Field(
        ..., default_factory=list, description="The soft skills to evaluate"
    )
    soft_skill_weighting: int

    experience_education: List[Criteria] = Field(
        ...,
        default_factory=list,
        description="The experience and education to evaluate",
    )
    experience_eductation_weighting: int

    
technical critieras
technical skill weight 3

criteria: good at python
weight 5

person scored a 9
rationale: they are very good at python


good at sql weight 1 person scored a 2

overall technical score is 

sum of (score * weight) / sum of weights

(9 * 5 ) + (2 * 1) / 6 = 7.5

TECHNICAL SCORE IS 7.5


soft
soft weight 5
is not an asshole weight 5 person scored a 7

SOFT SCORE IS 7


OVERALL SCORE IS

( 7.5 * 3 ) + ( 7 * 5 ) / 8 = 7.125


FINAL INTERVIEW SCORE IS 7.125

if no weighting between sections final score is just average of all scores

7.5 + 7 / 2 = 7.25


"""
